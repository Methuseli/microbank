services:
  frontend:
    build:
      context: ./client/
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    
  client_db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${CLIENT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CLIENT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CLIENT_POSTGRES_DB}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  banking_db:
    image: postgres:15
    container_name: postgres-banking-db
    restart: always
    environment:
      POSTGRES_USER: ${BANKING_POSTGRES_USER}
      POSTGRES_PASSWORD: ${BANKING_POSTGRES_PASSWORD}
      POSTGRES_DB: ${BANKING_POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - banking_postgres_data:/var/lib/postgresql/data

  # zookeeper:
  #   image: zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
  #     ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
  #   ports:
  #     - "2181:2181"

  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: ${KAFKA_NODE_ID}
      KAFKA_PROCESS_ROLES: ${KAFKA_PROCESS_ROLES}
      KAFKA_CONTROLLER_QUORUM_VOTERS: ${KAFKA_CONTROLLER_QUORUM_VOTERS}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_CONTROLLER_LISTENER_NAMES: ${KAFKA_CONTROLLER_LISTENER_NAMES}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}

  client-service:
    build: ./services/client
    container_name: client-service
    # restart: always
    depends_on:
      - client_db
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      SPRING_R2DBC_URL: r2dbc:postgresql://client_db/${CLIENT_POSTGRES_DB}
      SPRING_R2DBC_USERNAME: ${CLIENT_POSTGRES_USER}
      SPRING_R2DBC_PASSWORD: ${CLIENT_POSTGRES_PASSWORD}
      SPRING_JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: "8080"
    ports:
      - "8081:8080"

  banking-service:
    build: ./services/banking
    container_name: banking-service
    # restart: always
    depends_on:
      - banking_db
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      SPRING_R2DBC_URL: r2dbc:postgresql://banking_db/${BANKING_POSTGRES_DB}
      SPRING_R2DBC_USERNAME: ${BANKING_POSTGRES_USER}
      SPRING_R2DBC_PASSWORD: ${BANKING_POSTGRES_PASSWORD}
      SPRING_JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: "8080"
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  banking_postgres_data:
